<html>
	<head>
		<title>Sharing Location</title>
		<script src='/socket.io/socket.io.js'></script>
		<script src='/public/js/jquery.js'></script>
		<script type="text/javascript"
		        src="https://maps.googleapis.com/maps/api/js?sensor=true"></script>
		<script>
		function calc_average(origin){
			var lat = 0.0;
			var lng = 0.0;
			for(var i=0;i < origin.length;i++){
				lat = lat + origin[i][0];
				lng = lng + origin[i][1];
			}
			return [lat/origin.length,lng/origin.length]
		}
		$(document).ready(function(){
			var server = io.connect("http://<%=host%>/<%=channel%>");
			server.emit('join',{});
			var map_obj = initialize();
			counter = 0.0;
			position_array = [];
			setInterval(function(){
				if(navigator.geolocation){
					navigator.geolocation.getCurrentPosition(function(position){
						position_array[position_array.length] = [position.coords.latitude,position.coords.longitude];
						if(position_array.length > 4){
							raw_position = calc_average(position_array);
							var pos = new google.maps.LatLng(raw_position[0],raw_position[1]);
							map_obj.move(pos);
							map_obj.g_map.setCenter(pos);
							counter = counter + 0;//0.00001;
							server.emit("update_location",{lat:pos.lat(),lng:pos.lng()});
							position_array = [];
						}
					},function(){
						console.log('no geolocation error');
						//for test
						var pos = new google.maps.LatLng(35.6764259,139.77630380000005);
						map_obj.move(pos);
						map_obj.g_map.setCenter(pos);
						server.emit("update_location",{lat:pos.lat(),lng:pos.lng()});
					});
				}
			},100);
			server.on("position_update",function(data){
				//var test = 0.01;
				console.log('position_update_event:' + data.sub_channel);
				var test = 0;
				var pos = new google.maps.LatLng(data.lat,data.lng);
				map_obj.move_added_marker(pos,data.sub_channel);
			});
			server.on("remove_marker",function(data){
				map_obj.remove_marker(data.sub_channel);
			})
		});
		function initialize(){
			var myOption = {
				zoom: 18,
				mapTypeId: google.maps.MapTypeId.ROADMAP
			};
			var map = new google.maps.Map(document.getElementById('map_canvas'),myOption);
			var marker_image = new google.maps.MarkerImage(
					'/public/img/bluedot.png',
					null,
					null,
					new google.maps.Point(8,8),
					new google.maps.Size(17,17)
				);
			var marker = new google.maps.Marker({
						flat: true,
						icon: marker_image,
						optimzed: true,
						map: map,
						title: 'My Location',
						visible: true	
					});
			return {
				g_map: map,
				g_marker: marker,
				markers: {
					list : [],
					urls : ['reddot.png','yellowdot.png'],
					counter : 0,
					getUrl : function(){
						this.counter = this.counter + 1;
						return this.urls[this.counter % this.urls.length]
					}
				},
				move: function(pos){
					marker.setPosition(pos);
				},
				add_marker: function(pos,sub_channel){
					var new_marker_image = new google.maps.MarkerImage(
						'/public/img/' + this.markers.getUrl(),
						null,
						null,
						new google.maps.Point(8,8),
						new google.maps.Size(17,17)						
						)
					var new_marker = new google.maps.Marker({
						flat:  true,
						icon: new_marker_image,
						optimized: true,
						map: map,
						title: 'Another Location',
						position: pos,
						visible: true,
						animation: google.maps.Animation.DROP
						
					});
					return new_marker;
				},
				move_added_marker: function(pos,sub_channel){
					console.log(this.markers.list);
					if(this.markers.list[sub_channel] == null){
						this.markers.list[sub_channel] = this.add_marker(pos,sub_channel)
						this.fit_bounce();
						this.markers.list[sub_channel].setVisible(true);
					}
					this.markers.list[sub_channel].setPosition(pos);
				},
				remove_marker: function(sub_channel){
					this.markers.list[sub_channel].setMap(null);
				},
				fit_bounce: function(){
					var bounds = new google.maps.LatLngBounds();
					for(var i=0;i<this.markers.list.length;i++){
						if(this.markers.list[i] != null){
							bounds.extend(this.markers.list[i].getPosition());
						}
					}
					bounds.extend(this.g_marker.getPosition());
					this.g_map.fitBounds(bounds);
					this.g_map.setZoom(this.g_map.getZoom() - 2);
				}
			};
		}
		</script>
	</head>
	<boby>
		<div id="map_canvas" style="height: 80%"></div>
		<a href="http://<%=host%>/<%=channel%>">http://<%=host%>/<%=channel%></a><br />
		<a href="mailto:?body=http://<%=host%>/<%=channel%>">Share by Email</a>
	</body>
</html>